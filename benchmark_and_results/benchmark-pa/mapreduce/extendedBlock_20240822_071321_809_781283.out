====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	TaskAttemptListenerImpl.java	methodSinagture:	org.apache.hadoop.mapred.TaskAttemptListenerImpl.startRpcServer()V	methodLines:	155:180
blockLines:	167:-1
paras:	null
TaintedStat:	NORMAL startRpcServer:conditional branch(eq, to iindex=40) 34,24 Node: < Application, Lorg/apache/hadoop/mapred/TaskAttemptListenerImpl, startRpcServer()V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapred/TaskAttemptListenerImpl, startRpcServer()V > Context: Everywhere[31]34 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 4,32,24 @65 exception:33
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapred/TaskAttemptListenerImpl, startRpcServer()V > Context: Everywhere[31]34 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 4,32,24 @65 exception:33
NORMAL startRpcServer:conditional branch(eq, to iindex=40) 34,24 Node: < Application, Lorg/apache/hadoop/mapred/TaskAttemptListenerImpl, startRpcServer()V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
  protected void startRpcServer() {
    Configuration conf = getConfig();
    try {
      server = new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)
          .setInstance(this).setBindAddress("0.0.0.0")
          .setPortRangeConfig(MRJobConfig.MR_AM_JOB_CLIENT_PORT_RANGE)
          .setNumHandlers(
          conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, 
          MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))
          .setVerbose(false).setSecretManager(jobTokenSecretManager).build();

      // Enable service authorization?
      if (conf.getBoolean(
          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, 
          false)) {
        refreshServiceAcls(conf, new MRAMPolicyProvider());
      }

      server.start();
      this.address = NetUtils.createSocketAddrForHost(
          context.getNMHostname(),
          server.getListenerAddress().getPort());
    } catch (IOException e) {
      throw new YarnRuntimeException(e);
    }
  }



====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/mapred/TaskAttemptListenerImpl, serviceStart()V > Context: Everywhere, blocks=[BB[SSA:0..1]1 - org.apache.hadoop.mapred.TaskAttemptListenerImpl.serviceStart()V, BB[SSA:-1..-2]0 - org.apache.hadoop.mapred.TaskAttemptListenerImpl.serviceStart()V, BB[SSA:2..3]2 - org.apache.hadoop.mapred.TaskAttemptListenerImpl.serviceStart()V, BB[SSA:-1..-2]4 - org.apache.hadoop.mapred.TaskAttemptListenerImpl.serviceStart()V], numberOfBasicBlocks=4, firstLineNumber=143, lastLineNumber=145, firstMethodNumber=143, lastMethodNumber=146, isFirstLineValid=false, methodSrcCode=
  protected void serviceStart() throws Exception {
    startRpcServer();
    super.serviceStart();
  }

}
