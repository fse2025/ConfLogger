====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	HistoryClientService.java	methodSinagture:	org.apache.hadoop.mapreduce.v2.hs.HistoryClientService.serviceStart()V	methodLines:	122:153
blockLines:	139:-1
paras:	null
TaintedStat:	NORMAL serviceStart:conditional branch(eq, to iindex=44) 26,24 Node: < Application, Lorg/apache/hadoop/mapreduce/v2/hs/HistoryClientService, serviceStart()V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapreduce/v2/hs/HistoryClientService, serviceStart()V > Context: Everywhere[34]26 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 4,23,24 @61 exception:25
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapreduce/v2/hs/HistoryClientService, serviceStart()V > Context: Everywhere[34]26 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 4,23,24 @61 exception:25
NORMAL serviceStart:conditional branch(eq, to iindex=44) 26,24 Node: < Application, Lorg/apache/hadoop/mapreduce/v2/hs/HistoryClientService, serviceStart()V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
  protected void serviceStart() throws Exception {
    Configuration conf = getConfig();
    YarnRPC rpc = YarnRPC.create(conf);
    initializeWebApp(conf);
    InetSocketAddress address = conf.getSocketAddr(
        JHAdminConfig.MR_HISTORY_BIND_HOST,
        JHAdminConfig.MR_HISTORY_ADDRESS,
        JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS,
        JHAdminConfig.DEFAULT_MR_HISTORY_PORT);

    server =
        rpc.getServer(HSClientProtocol.class, protocolHandler, address,
            conf, jhsDTSecretManager,
            conf.getInt(JHAdminConfig.MR_HISTORY_CLIENT_THREAD_COUNT,
                JHAdminConfig.DEFAULT_MR_HISTORY_CLIENT_THREAD_COUNT));

    // Enable service authorization?
    if (conf.getBoolean(
        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,
        false)) {
      server.refreshServiceAcl(conf, new ClientHSPolicyProvider());
    }
    
    server.start();
    this.bindAddress = conf.updateConnectAddr(JHAdminConfig.MR_HISTORY_BIND_HOST,
                                              JHAdminConfig.MR_HISTORY_ADDRESS,
                                              JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS,
                                              server.getListenerAddress());
    LOG.info("Instantiated HistoryClientService at " + this.bindAddress);

    super.serviceStart();
  }



====================ctx:=======================
