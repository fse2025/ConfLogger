====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	DataNodePeerMetrics.java	methodSinagture:	org.apache.hadoop.hdfs.server.datanode.metrics.DataNodePeerMetrics.setLowThresholdMs(J)V	methodLines:	187:192
blockLines:	188:-1
paras:	dfs.namenode.checkpoint.txns
TaintedStat:	NORMAL setLowThresholdMs:conditional branch(le, to iindex=7) 5,6 Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodePeerMetrics, setLowThresholdMs(J)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/server/namenode/ImageServlet$2, run()Ljava/lang/Void; > Context: Everywhere[130]62 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getLong(Ljava/lang/String;J)J > 58,59,60 @303 exception:61
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/server/namenode/ImageServlet$2, run()Ljava/lang/Void; > Context: Everywhere[130]62 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getLong(Ljava/lang/String;J)J > 58,59,60 @303 exception:61
NORMAL run:76 = compare 75,62 opcode=cmp Node: < Application, Lorg/apache/hadoop/hdfs/server/namenode/ImageServlet$2, run()Ljava/lang/Void; > Context: Everywhere
NORMAL run:conditional branch(ge, to iindex=196) 76,28 Node: < Application, Lorg/apache/hadoop/hdfs/server/namenode/ImageServlet$2, run()Ljava/lang/Void; > Context: Everywhere
NORMAL run:conditional branch(eq, to iindex=231) 81,82 Node: < Application, Lorg/apache/hadoop/hdfs/server/namenode/ImageServlet$2, run()Ljava/lang/Void; > Context: Everywhere
NORMAL run:87 = invokestatic < Application, Lorg/apache/hadoop/util/Time, monotonicNow()J > @532 exception:86 Node: < Application, Lorg/apache/hadoop/hdfs/server/namenode/ImageServlet$2, run()Ljava/lang/Void; > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/util/Time, monotonicNow()J > Context: Everywhere
NORMAL monotonicNow:return 5 Node: < Extension, Lorg/apache/hadoop/util/Time, monotonicNow()J > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Extension, Lorg/apache/hadoop/util/Time, monotonicNow()J > Context: Everywhere
NORMAL_RET_CALLER:Node: < Extension, Lorg/apache/hadoop/util/Shell, run()V > Context: Everywhere[5]7 = invokestatic < Extension, Lorg/apache/hadoop/util/Time, monotonicNow()J > @9 exception:6
NORMAL run:8 = compare 5,7 opcode=cmp Node: < Extension, Lorg/apache/hadoop/util/Shell, run()V > Context: Everywhere
NORMAL run:conditional branch(le, to iindex=10) 8,9 Node: < Extension, Lorg/apache/hadoop/util/Shell, run()V > Context: Everywhere
NORMAL run:invokespecial < Extension, Lorg/apache/hadoop/util/Shell, runCommand()V > 1 @37 exception:15 Node: < Extension, Lorg/apache/hadoop/util/Shell, run()V > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/util/Shell, runCommand()V > Context: Everywhere
NORMAL runCommand:invokevirtual < Extension, Ljava/lang/Thread, start()V > 71 @271 exception:73 Node: < Extension, Lorg/apache/hadoop/util/Shell, runCommand()V > Context: Everywhere
METHOD_ENTRY:Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
NORMAL start:invokeinterface < Primordial, Ljava/lang/Runnable, run()V > 4 @5 exception:5 Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/conf/ReconfigurableBase$ReconfigurationThread, run()V > Context: Everywhere
NORMAL run:conditional branch(eq, to iindex=159) 25,26 Node: < Extension, Lorg/apache/hadoop/conf/ReconfigurableBase$ReconfigurationThread, run()V > Context: Everywhere
NORMAL run:conditional branch(ne, to iindex=83) 42,26 Node: < Extension, Lorg/apache/hadoop/conf/ReconfigurableBase$ReconfigurationThread, run()V > Context: Everywhere
NORMAL run:87 = getfield < Extension, Lorg/apache/hadoop/conf/ReconfigurationUtil$PropertyChange, newVal, <Extension,Ljava/lang/String> > 29 Node: < Extension, Lorg/apache/hadoop/conf/ReconfigurableBase$ReconfigurationThread, run()V > Context: Everywhere
PARAM_CALLER:Node: < Extension, Lorg/apache/hadoop/conf/ReconfigurableBase$ReconfigurationThread, run()V > Context: Everywhere[122]89 = invokevirtual < Extension, Lorg/apache/hadoop/conf/ReconfigurableBase, reconfigurePropertyImpl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 85,86,87 @277 exception:88 v87
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfigurePropertyImpl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere v3
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfigurePropertyImpl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere[559]86 = invokespecial < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 1,2,3 @1270 exception:85 v3
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere v3
NORMAL reconfSlowPeerParameters:conditional branch(ne, to iindex=111) 3,5 Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
PHI Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere:40 = phi  39,38
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere[120]invokevirtual < Application, Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodePeerMetrics, setLowThresholdMs(J)V > 43,40 @239 exception:44 v40
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodePeerMetrics, setLowThresholdMs(J)V > Context: Everywhere v2
NORMAL setLowThresholdMs:5 = compare 2,4 opcode=cmp Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodePeerMetrics, setLowThresholdMs(J)V > Context: Everywhere
NORMAL setLowThresholdMs:conditional branch(le, to iindex=7) 5,6 Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodePeerMetrics, setLowThresholdMs(J)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
  public void setLowThresholdMs(long thresholdMs) {
    Preconditions.checkArgument(thresholdMs > 0,
        DFS_DATANODE_SLOWPEER_LOW_THRESHOLD_MS_KEY + " should be larger than 0");
    lowThresholdMs = thresholdMs;
    this.slowNodeDetector.setLowThresholdMs(thresholdMs);
  }



====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/hdfs/server/datanode/DataNode, reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere, blocks=[BB[SSA:119..120]52 - org.apache.hadoop.hdfs.server.datanode.DataNode.reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, BB[SSA:116..118]51 - org.apache.hadoop.hdfs.server.datanode.DataNode.reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, BB[SSA:121..121]53 - org.apache.hadoop.hdfs.server.datanode.DataNode.reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;, BB[SSA:-1..-2]71 - org.apache.hadoop.hdfs.server.datanode.DataNode.reconfSlowPeerParameters(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;], numberOfBasicBlocks=4, firstLineNumber=811, lastLineNumber=813, firstMethodNumber=782, lastMethodNumber=824, isFirstLineValid=true, methodSrcCode=
      throws ReconfigurationException {
    String result = null;
    try {
      LOG.info("Reconfiguring {} to {}", property, newVal);
      if (property.equals(DFS_DATANODE_PEER_STATS_ENABLED_KEY)) {
        Preconditions.checkNotNull(dnConf, "DNConf has not been initialized.");
        if (newVal != null && !newVal.equalsIgnoreCase("true")
            && !newVal.equalsIgnoreCase("false")) {
          throw new IllegalArgumentException("Not a valid Boolean value for " + property +
              " in reconfSlowPeerParameters");
        }
        boolean enable = (newVal == null ? DFS_DATANODE_PEER_STATS_ENABLED_DEFAULT :
            Boolean.parseBoolean(newVal));
        result = Boolean.toString(enable);
        dnConf.setPeerStatsEnabled(enable);
        if (enable) {
          // Create if it doesn't exist, overwrite if it does.
          peerMetrics = DataNodePeerMetrics.create(getDisplayName(), getConf());
        }
      } else if (property.equals(DFS_DATANODE_MIN_OUTLIER_DETECTION_NODES_KEY)) {
        Preconditions.checkNotNull(peerMetrics, "DataNode peer stats may be disabled.");
        long minNodes = (newVal == null ? DFS_DATANODE_MIN_OUTLIER_DETECTION_NODES_DEFAULT :
            Long.parseLong(newVal));
        result = Long.toString(minNodes);
        peerMetrics.setMinOutlierDetectionNodes(minNodes);
      } else if (property.equals(DFS_DATANODE_SLOWPEER_LOW_THRESHOLD_MS_KEY)) {
        Preconditions.checkNotNull(peerMetrics, "DataNode peer stats may be disabled.");
        long threshold = (newVal == null ? DFS_DATANODE_SLOWPEER_LOW_THRESHOLD_MS_DEFAULT :
            Long.parseLong(newVal));
        result = Long.toString(threshold);
        peerMetrics.setLowThresholdMs(threshold);
      } else if (property.equals(DFS_DATANODE_PEER_METRICS_MIN_OUTLIER_DETECTION_SAMPLES_KEY)) {
        Preconditions.checkNotNull(peerMetrics, "DataNode peer stats may be disabled.");
        long minSamples = (newVal == null ?
            DFS_DATANODE_PEER_METRICS_MIN_OUTLIER_DETECTION_SAMPLES_DEFAULT :
            Long.parseLong(newVal));
        result = Long.toString(minSamples);
        peerMetrics.setMinOutlierDetectionSamples(minSamples);
      }
      LOG.info("RECONFIGURE* changed {} to {}", property, newVal);
      return result;
    } catch (IllegalArgumentException e) {
      throw new ReconfigurationException(property, newVal, getConf().get(property), e);
    }
}
