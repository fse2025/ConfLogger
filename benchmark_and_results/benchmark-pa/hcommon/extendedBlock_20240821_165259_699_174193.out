====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	KMSUtil.java	methodSinagture:	org.apache.hadoop.util.KMSUtil.createKeyProviderFromUri(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/crypto/key/KeyProvider;	methodLines:	82:92
blockLines:	84:-1
paras:	null
TaintedStat:	NORMAL createKeyProviderFromUri:conditional branch(ne, to iindex=19) 5,6 Node: < Application, Lorg/apache/hadoop/util/KMSUtil, createKeyProviderFromUri(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/crypto/key/KeyProvider; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/util/KMSUtil, createKeyProviderFromUri(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/crypto/key/KeyProvider; > Context: Everywhere[2]5 = invokestatic < Application, Lorg/apache/hadoop/crypto/key/KeyProviderFactory, get(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/crypto/key/KeyProvider; > 2,1 @2 exception:4
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/util/KMSUtil, createKeyProviderFromUri(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/crypto/key/KeyProvider; > Context: Everywhere[2]5 = invokestatic < Application, Lorg/apache/hadoop/crypto/key/KeyProviderFactory, get(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/crypto/key/KeyProvider; > 2,1 @2 exception:4
NORMAL createKeyProviderFromUri:conditional branch(ne, to iindex=19) 5,6 Node: < Application, Lorg/apache/hadoop/util/KMSUtil, createKeyProviderFromUri(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/crypto/key/KeyProvider; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      final URI providerUri) throws IOException {
    KeyProvider keyProvider = KeyProviderFactory.get(providerUri, conf);
    if (keyProvider == null) {
      throw new IOException("Could not instantiate KeyProvider for uri: " +
          providerUri);
    }
    if (keyProvider.isTransient()) {
      throw new IOException("KeyProvider " + keyProvider.toString()
          + " was found but it is a transient provider.");
    }
    return keyProvider;
  }


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/util/KMSUtil, createKeyProvider(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/crypto/key/KeyProvider; > Context: Everywhere, blocks=[BB[SSA:11..13]4 - org.apache.hadoop.util.KMSUtil.createKeyProvider(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/crypto/key/KeyProvider;, BB[SSA:7..10]3 - org.apache.hadoop.util.KMSUtil.createKeyProvider(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/crypto/key/KeyProvider;, BB[SSA:14..14]5 - org.apache.hadoop.util.KMSUtil.createKeyProvider(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/crypto/key/KeyProvider;, BB[SSA:-1..-2]8 - org.apache.hadoop.util.KMSUtil.createKeyProvider(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/crypto/key/KeyProvider;], numberOfBasicBlocks=4, firstLineNumber=62, lastLineNumber=63, firstMethodNumber=60, lastMethodNumber=63, isFirstLineValid=true, methodSrcCode=
      final String configKeyName) throws IOException {
    LOG.debug("Creating key provider with config key {}", configKeyName);
    URI uri = getKeyProviderUri(conf, configKeyName);
    return (uri != null) ? createKeyProviderFromUri(conf, uri) : null;
  }
}
