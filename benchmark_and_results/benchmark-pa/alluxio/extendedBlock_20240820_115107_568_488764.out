====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	CachedGroupMapping.java	methodSinagture:	alluxio.security.group.CachedGroupMapping.<init>(Lalluxio/security/group/GroupMappingService;J)V	methodLines:	56:72
blockLines:	59:-1
paras:	null
TaintedStat:	NORMAL <init>:conditional branch(le, to iindex=33) 23,24 Node: < Application, Lalluxio/security/group/CachedGroupMapping, <init>(Lalluxio/security/group/GroupMappingService;J)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lalluxio/security/group/GroupMappingService$Factory, get(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/security/group/GroupMappingService; > Context: Everywhere[26]19 = invokeinterface < Application, Lalluxio/conf/AlluxioConfiguration, getMs(Lalluxio/conf/PropertyKey;)J > 1,17 @54 exception:18
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lalluxio/security/group/GroupMappingService$Factory, get(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/security/group/GroupMappingService; > Context: Everywhere[26]19 = invokeinterface < Application, Lalluxio/conf/AlluxioConfiguration, getMs(Lalluxio/conf/PropertyKey;)J > 1,17 @54 exception:18
PARAM_CALLER:Node: < Application, Lalluxio/security/group/GroupMappingService$Factory, get(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/security/group/GroupMappingService; > Context: Everywhere[27]invokespecial < Application, Lalluxio/security/group/CachedGroupMapping, <init>(Lalluxio/security/group/GroupMappingService;J)V > 16,15,19 @59 exception:20 v19
PARAM_CALLEE:Node: < Application, Lalluxio/security/group/CachedGroupMapping, <init>(Lalluxio/security/group/GroupMappingService;J)V > Context: Everywhere v3
NORMAL <init>:23 = compare 3,22 opcode=cmp Node: < Application, Lalluxio/security/group/CachedGroupMapping, <init>(Lalluxio/security/group/GroupMappingService;J)V > Context: Everywhere
NORMAL <init>:conditional branch(le, to iindex=33) 23,24 Node: < Application, Lalluxio/security/group/CachedGroupMapping, <init>(Lalluxio/security/group/GroupMappingService;J)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
   */
  public CachedGroupMapping(GroupMappingService service, long groupMappingCacheTimeoutMs) {
    mService = service;
    mCacheEnabled = groupMappingCacheTimeoutMs > 0;
    if (mCacheEnabled) {
      mCache = CacheBuilder.newBuilder()
          // the maximum number of entries the cache may contain.
          .maximumSize(MAXSIZE)
          // active entries are eligible for automatic refresh once the specified time duration has
          // elapsed after the entry was last modified.
          .refreshAfterWrite(groupMappingCacheTimeoutMs, TimeUnit.MILLISECONDS)
          // each entry should be automatically removed from the cache once the specified time
          // duration has elapsed after the entry was last modified.
          .expireAfterWrite(10 * groupMappingCacheTimeoutMs, TimeUnit.MILLISECONDS)
          .build(new GroupMappingCacheLoader());
    }
  }



====================ctx:=======================
