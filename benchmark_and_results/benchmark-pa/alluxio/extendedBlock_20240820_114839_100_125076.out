====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	StaticMembershipManager.java	methodSinagture:	alluxio.membership.StaticMembershipManager.parseWorkerAddresses(Ljava/lang/String;Lalluxio/conf/AlluxioConfiguration;)Ljava/util/List;	methodLines:	77:116
blockLines:	95:-1
paras:	null
TaintedStat:	NORMAL parseWorkerAddresses:conditional branch(eq, to iindex=79) 52,10 Node: < Application, Lalluxio/membership/StaticMembershipManager, parseWorkerAddresses(Ljava/lang/String;Lalluxio/conf/AlluxioConfiguration;)Ljava/util/List; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lalluxio/membership/StaticMembershipManager, parseWorkerAddresses(Ljava/lang/String;Lalluxio/conf/AlluxioConfiguration;)Ljava/util/List; > Context: Everywhere[66]52 = invokeinterface < Application, Lalluxio/conf/AlluxioConfiguration, getBoolean(Lalluxio/conf/PropertyKey;)Z > 49,50 @165 exception:51
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lalluxio/membership/StaticMembershipManager, parseWorkerAddresses(Ljava/lang/String;Lalluxio/conf/AlluxioConfiguration;)Ljava/util/List; > Context: Everywhere[66]52 = invokeinterface < Application, Lalluxio/conf/AlluxioConfiguration, getBoolean(Lalluxio/conf/PropertyKey;)Z > 49,50 @165 exception:51
NORMAL parseWorkerAddresses:conditional branch(eq, to iindex=79) 52,10 Node: < Application, Lalluxio/membership/StaticMembershipManager, parseWorkerAddresses(Ljava/lang/String;Lalluxio/conf/AlluxioConfiguration;)Ljava/util/List; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      String configFile, AlluxioConfiguration conf) {
    List<WorkerInfo> workerInfos = new ArrayList<>();
    File file = new File(configFile);
    if (!file.exists()) {
      throw new NotFoundRuntimeException("Not found for static worker config file:" + configFile);
    }
    Set<String> workerHostnames = CommandUtils.readNodeList("", configFile);
    for (String workerHostname : workerHostnames) {
      WorkerNetAddress workerNetAddress = new WorkerNetAddress()
          .setHost(workerHostname)
          .setContainerHost(Configuration.global()
              .getOrDefault(PropertyKey.WORKER_CONTAINER_HOSTNAME, ""))
          .setRpcPort(conf.getInt(PropertyKey.WORKER_RPC_PORT))
          .setWebPort(conf.getInt(PropertyKey.WORKER_WEB_PORT))
          .setHttpServerPort(conf.getInt(PropertyKey.WORKER_HTTP_SERVER_PORT));
      //data port, these are initialized from configuration for client to deduce the
      //workeraddr related info, on worker side, it will be corrected by join().
      InetSocketAddress inetAddr;
      if (Configuration.global().getBoolean(PropertyKey.USER_NETTY_DATA_TRANSMISSION_ENABLED))  {
        inetAddr = NetworkAddressUtils.getBindAddress(
            NetworkAddressUtils.ServiceType.WORKER_DATA,
            Configuration.global());
        workerNetAddress.setNettyDataPort(inetAddr.getPort());
      } else {
        inetAddr = NetworkAddressUtils.getConnectAddress(
            NetworkAddressUtils.ServiceType.WORKER_RPC,
            Configuration.global());
      }
      workerNetAddress.setDataPort(inetAddr.getPort());
      // generate identities from hostnames
      // todo(bowen): consider change the configuration file to allow specify both the
      //  identity and the net address
      WorkerIdentity identity = WorkerIdentity.ParserV1.INSTANCE.fromUUID(
          UUID.nameUUIDFromBytes(workerHostname.getBytes(StandardCharsets.UTF_8)));
      WorkerInfo workerInfo = new WorkerInfo()
          .setIdentity(identity)
          .setAddress(workerNetAddress);
      workerInfos.add(workerInfo);
    }
    return workerInfos;
  }


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lalluxio/membership/StaticMembershipManager, create(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/membership/StaticMembershipManager; > Context: Everywhere, blocks=[BB[SSA:3..6]2 - alluxio.membership.StaticMembershipManager.create(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/membership/StaticMembershipManager;, BB[SSA:0..2]1 - alluxio.membership.StaticMembershipManager.create(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/membership/StaticMembershipManager;, BB[SSA:7..8]3 - alluxio.membership.StaticMembershipManager.create(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/membership/StaticMembershipManager;, BB[SSA:-1..-2]6 - alluxio.membership.StaticMembershipManager.create(Lalluxio/conf/AlluxioConfiguration;)Lalluxio/membership/StaticMembershipManager;], numberOfBasicBlocks=4, firstLineNumber=50, lastLineNumber=53, firstMethodNumber=49, lastMethodNumber=53, isFirstLineValid=true, methodSrcCode=
    // user conf/workers, use default port
    String workerListFile = conf.getString(
        PropertyKey.WORKER_STATIC_MEMBERSHIP_MANAGER_CONFIG_FILE);
    List<WorkerInfo> workers = parseWorkerAddresses(workerListFile, conf);
    return new StaticMembershipManager(conf, workers);
  }
}
