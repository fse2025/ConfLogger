```java
protected void setupTicks(boolean isSpout) {
    final Integer tickTimeSecs = ObjectReader.getInt(topoConf.get(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS), null);
    if (tickTimeSecs != null) {
        boolean enableMessageTimeout = (Boolean) topoConf.get(Config.TOPOLOGY_ENABLE_MESSAGE_TIMEOUTS);
        boolean isAcker = Acker.ACKER_COMPONENT_ID.equals(componentId);
        if ((!isAcker && Utils.isSystemId(componentId))
                || (!enableMessageTimeout && isSpout)
                || (!enableMessageTimeout && isAcker)) {
            // ConfLogger Skipped: The log message contains configuration-related information about why timeouts are disabled.
            LOG.info("Timeouts disabled for executor {}:{}", componentId, executorId);
        } else {
            StormTimer timerTask = workerData.getUserTimer();
            timerTask.scheduleRecurring(tickTimeSecs, tickTimeSecs,
                    () -> {
                        TupleImpl tuple = new TupleImpl(workerTopologyContext, new Values(tickTimeSecs),
                                Constants.SYSTEM_COMPONENT_ID,
                                (int) Constants.SYSTEM_TASK_ID,
                                Constants.SYSTEM_TICK_STREAM_ID);
                        AddressedTuple tickTuple = new AddressedTuple(AddressedTuple.BROADCAST_DEST, tuple);
                        try {
                            receiveQueue.publish(tickTuple);
                            receiveQueue.flush(); // avoid buffering
                        } catch (InterruptedException e) {
                            // ConfLogger Skipped: The log message contains information about the interruption and the action taken.
                            LOG.warn("Thread interrupted when emitting tick tuple. Setting interrupt flag.");
                            Thread.currentThread().interrupt();
                            return;
                        }
                    }
            );
        }
    } else {
        // ConfLogger Inserted Start
        logger.warn("Tick time seconds is not set (null) for configuration parameter '{}'. Please set '{}' to enable tick tuple scheduling.", Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS);
        // ConfLogger Inserted End
    }
}
```