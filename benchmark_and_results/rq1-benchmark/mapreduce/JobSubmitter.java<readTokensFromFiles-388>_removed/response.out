```java
// add tokens and secrets coming from a token storage file
String binaryTokenFilename =
conf.get(MRJobConfig.MAPREDUCE_JOB_CREDENTIALS_BINARY);
if (binaryTokenFilename != null) {
    Credentials binary = Credentials.readTokenStorageFile(
        FileSystem.getLocal(conf).makeQualified(
            new Path(binaryTokenFilename)),
        conf);
    credentials.addAll(binary);
} else {
    // ConfLogger Inserted Start
    logger.warn("The binary token filename is not set. Ensure that the configuration parameter " +
                "MRJobConfig.MAPREDUCE_JOB_CREDENTIALS_BINARY is properly configured to enable " +
                "token storage file reading.");
    // ConfLogger Inserted End
}

// add secret keys coming from a json file
String tokensFileName = conf.get("mapreduce.job.credentials.json");
if(tokensFileName != null) {
    LOG.info("loading user's secret keys from " + tokensFileName);
    String localFileName = new Path(tokensFileName).toUri().getPath();

    try {
        // read JSON
        Map<String, String> nm = JsonSerialization.mapReader().readValue(
            new File(localFileName));

        for(Map.Entry<String, String> ent: nm.entrySet()) {
            credentials.addSecretKey(new Text(ent.getKey()), ent.getValue()
            .getBytes(Charsets.UTF_8));
        }
    } catch (JsonMappingException | JsonParseException e) {
        // ConfLogger Inserted Start
        logger.error("Failed to parse JSON from the file: " + tokensFileName + 
                     ". Ensure the JSON structure is correct. Exception: " + e.getMessage());
        // ConfLogger Inserted End
    }
} else {
    // ConfLogger Inserted Start
    logger.warn("The JSON token filename is not set. Ensure that the configuration parameter " +
                "'mapreduce.job.credentials.json' is properly configured to enable secret key loading.");
    // ConfLogger Inserted End
}
```

In this updated code, I've inserted logging statements at the appropriate positions based on the type of configuration checking:

1. **Type 1**: For both `binaryTokenFilename` and `tokensFileName`, if they are `null`, a warning log is inserted to indicate that the configuration parameter is not set, and guidance is provided on how to properly configure it.

2. **Type 1**: In the JSON parsing block, an error log is inserted to capture any exceptions that occur during JSON parsing, providing details about the exception and suggesting checking the JSON structure.