```java
// Initialize the custom access loggers if configured.
Collection<String> alClasses =
conf.getTrimmedStringCollection(DFS_NAMENODE_AUDIT_LOGGERS_KEY);
List<AuditLogger> auditLoggers = Lists.newArrayList();
boolean topAuditLoggerAdded = false;
if (alClasses != null && !alClasses.isEmpty()) {
    // ConfLogger Inserted Start
    logger.info("Initializing custom access loggers with configuration parameter: {}. Number of classes to initialize: {}", DFS_NAMENODE_AUDIT_LOGGERS_KEY, alClasses.size());
    // ConfLogger Inserted End
    for (String className : alClasses) {
        try {
            AuditLogger logger;
            if (DFS_NAMENODE_DEFAULT_AUDIT_LOGGER_NAME.equals(className)) {
                logger = new FSNamesystemAuditLogger();
            } else {
                logger = (AuditLogger) Class.forName(className).newInstance();
                if (TopAuditLogger.class.getName().equals(
                        logger.getClass().getName())) {
                    topAuditLoggerAdded = true;
                }
            }
            logger.initialize(conf);
            auditLoggers.add(logger);
        } catch (InstantiationException e) {
            // ConfLogger Skipped: The log message already contains the class name which is part of the configuration parameter value.
            LOG.error("{} instantiation failed.", className, e);
            throw new RuntimeException(e);
        } catch (RuntimeException re) {
            throw re;
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}

// Make sure there is at least one logger installed.
if (auditLoggers.isEmpty()) {
    // ConfLogger Inserted Start
    logger.warn("No custom access loggers were initialized. Adding default FSNamesystemAuditLogger as a fallback.");
    // ConfLogger Inserted End
    FSNamesystemAuditLogger fsNamesystemAuditLogger = new FSNamesystemAuditLogger();
    fsNamesystemAuditLogger.initialize(conf);
    auditLoggers.add(fsNamesystemAuditLogger);
}

// Add audit logger to calculate top users
if (topConf.isEnabled && !topAuditLoggerAdded) {
    // ConfLogger Inserted Start
    logger.info("TopAuditLogger is not added yet. Adding TopAuditLogger with top metrics configuration.");
    // ConfLogger Inserted End
    topMetrics = new TopMetrics(conf, topConf.nntopReportingPeriodsMs);
    if (DefaultMetricsSystem.instance().getSource(
            TOPMETRICS_METRICS_SOURCE_NAME) == null) {
        DefaultMetricsSystem.instance().register(TOPMETRICS_METRICS_SOURCE_NAME,
                "Top N operations by user", topMetrics);
    }
    auditLoggers.add(new TopAuditLogger(topMetrics));
}

return Collections.unmodifiableList(auditLoggers);
}
```