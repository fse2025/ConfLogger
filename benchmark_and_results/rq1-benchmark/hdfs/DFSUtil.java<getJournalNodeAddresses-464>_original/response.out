```java
Configuration conf) throws URISyntaxException, IOException {
    Set<String> journalNodeList = new HashSet<>();
    String journalsUri = "";
    try {
        journalsUri = conf.get(DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
        if (journalsUri == null) {
            Collection<String> nameserviceIds = DFSUtilClient.getNameServiceIds(conf);
            for (String nsId : nameserviceIds) {
                journalsUri = DFSUtilClient.getConfValue(null, nsId, conf, DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
                if (journalsUri == null) {
                    Collection<String> nnIds = DFSUtilClient.getNameNodeIds(conf, nsId);
                    for (String nnId : nnIds) {
                        String suffix = DFSUtilClient.concatSuffixes(nsId, nnId);
                        journalsUri = DFSUtilClient.getConfValue(null, suffix, conf, DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
                        if (journalsUri == null || !journalsUri.startsWith("qjournal://")) {
                            // ConfLogger Inserted Start
                            logger.warn("Configuration parameter '{}' is not set or does not start with 'qjournal://'. Please ensure it is properly configured for nameserviceId '{}' and namenodeId '{}'.", DFS_NAMENODE_SHARED_EDITS_DIR_KEY, nsId, nnId);
                            // ConfLogger Inserted End
                            return journalNodeList;
                        } else {
                            // ConfLogger Skipped: Existing log provides configuration parameter key and guidance.
                            LOG.warn(DFS_NAMENODE_SHARED_EDITS_DIR_KEY + " is to be " +
                                    "configured as nameservice" +
                                    " specific key(append it with nameserviceId), no need" +
                                    " to append it with namenodeId");
                            URI uri = new URI(journalsUri);
                            List<InetSocketAddress> socketAddresses = Util.getAddressesList(uri);
                            for (InetSocketAddress is : socketAddresses) {
                                journalNodeList.add(is.getHostName());
                            }
                        }
                    }
                } else if (!journalsUri.startsWith("qjournal://")) {
                    // ConfLogger Inserted Start
                    logger.warn("Configuration parameter '{}' does not start with 'qjournal://'. Please ensure it is properly configured for nameserviceId '{}'.", DFS_NAMENODE_SHARED_EDITS_DIR_KEY, nsId);
                    // ConfLogger Inserted End
                    return journalNodeList;
                } else {
                    URI uri = new URI(journalsUri);
                    List<InetSocketAddress> socketAddresses = Util.getAddressesList(uri);
                    for (InetSocketAddress is : socketAddresses) {
                        journalNodeList.add(is.getHostName());
                    }
                }
            }
        } else {
            if (!journalsUri.startsWith("qjournal://")) {
                // ConfLogger Inserted Start
                logger.warn("Configuration parameter '{}' does not start with 'qjournal://'. Please ensure it is properly configured.", DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
                // ConfLogger Inserted End
                return journalNodeList;
            } else {
                URI uri = new URI(journalsUri);
                List<InetSocketAddress> socketAddresses = Util.getAddressesList(uri);
                for (InetSocketAddress is : socketAddresses) {
                    journalNodeList.add(is.getHostName());
                }
            }
        }
    } catch (UnknownHostException e) {
        // ConfLogger Skipped: Existing log provides configuration parameter key and error context.
        LOG.error("The conf property " + DFS_NAMENODE_SHARED_EDITS_DIR_KEY
                + " is not properly set with correct journal node hostnames");
        throw new UnknownHostException(journalsUri);
    } catch (URISyntaxException e) {
        // ConfLogger Skipped: Existing log provides configuration parameter key and error context.
        LOG.error("The conf property " + DFS_NAMENODE_SHARED_EDITS_DIR_KEY
                + "is not set properly with correct journal node uri");
        throw new URISyntaxException(journalsUri, "The conf property " +
                DFS_NAMENODE_SHARED_EDITS_DIR_KEY + "is not" +
                " properly set with correct journal node uri");
    }

    return journalNodeList;
}
```