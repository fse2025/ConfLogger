```java
public static synchronized boolean isNativeBzip2Loaded(Configuration conf) {
    String libname = conf.get("io.compression.codec.bzip2.library", "system-native");
    if (!bzip2LibraryName.equals(libname)) {
        nativeBzip2Loaded = false;
        bzip2LibraryName = libname;
        if (libname.equals("java-builtin")) {
            // ConfLogger Skipped: The log message provides information about the configuration parameter value and the system's response to it.
            LOG.info("Using pure-Java version of bzip2 library");
        } else if (NativeCodeLoader.isNativeCodeLoaded()) {
            try {
                // Initialize the native library.
                Bzip2Compressor.initSymbols(libname);
                Bzip2Decompressor.initSymbols(libname);
                nativeBzip2Loaded = true;
                // ConfLogger Skipped: The log message provides information about the successful loading of the native library, including the library name.
                LOG.info("Successfully loaded & initialized native-bzip2 library " + libname);
            } catch (Throwable t) {
                // ConfLogger Skipped: The log message provides information about the failure to load the native library and the fallback to the Java version.
                LOG.warn("Failed to load/initialize native-bzip2 library " + libname + ", will use pure-Java version");
            }
        } else {
            // ConfLogger Inserted Start
            logger.warn("Native code is not loaded, unable to load native-bzip2 library. Ensure that the native code is available and properly configured. Falling back to pure-Java version. Configuration parameter: io.compression.codec.bzip2.library, value: " + libname);
            // ConfLogger Inserted End
        }
    }
    return nativeBzip2Loaded;
}
```