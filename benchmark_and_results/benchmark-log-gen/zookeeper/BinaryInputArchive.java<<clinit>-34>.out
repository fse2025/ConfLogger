====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	BinaryInputArchive.java	methodSinagture:	org.apache.jute.BinaryInputArchive.<clinit>()V	methodLines:	34:48
blockLines:	42:-1
paras:	zookeeper.jute.maxbuffer.extrasize
TaintedStat:	NORMAL <clinit>:conditional branch(ge, to iindex=16) 13,14 Node: < Application, Lorg/apache/jute/BinaryInputArchive, <clinit>()V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/jute/BinaryInputArchive, <clinit>()V > Context: Everywhere[7]11 = invokestatic < Application, Ljava/lang/Integer, getInteger(Ljava/lang/String;I)Ljava/lang/Integer; > 8,9 @18 exception:10
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/jute/BinaryInputArchive, <clinit>()V > Context: Everywhere[7]11 = invokestatic < Application, Ljava/lang/Integer, getInteger(Ljava/lang/String;I)Ljava/lang/Integer; > 8,9 @18 exception:10
NORMAL <clinit>:13 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 11 @23 exception:12 Node: < Application, Lorg/apache/jute/BinaryInputArchive, <clinit>()V > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/Integer, intValue()I > Context: Everywhere
NORMAL intValue:return 3 Node: < Primordial, Ljava/lang/Integer, intValue()I > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/Integer, intValue()I > Context: Everywhere
NORMAL_RET_CALLER:Node: < Application, Lorg/apache/jute/BinaryInputArchive, <clinit>()V > Context: Everywhere[10]13 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 11 @23 exception:12
NORMAL <clinit>:conditional branch(ge, to iindex=16) 13,14 Node: < Application, Lorg/apache/jute/BinaryInputArchive, <clinit>()V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
    // CHECKSTYLE.OFF: ConstantName - for backward compatibility
    public static final int maxBuffer = Integer.getInteger("jute.maxbuffer", 0xfffff);
    // CHECKSTYLE.ON:
    private static final int extraMaxBuffer;

    static {
        final Integer configuredExtraMaxBuffer =
            Integer.getInteger("zookeeper.jute.maxbuffer.extrasize", maxBuffer);
        if (configuredExtraMaxBuffer < 1024) {
            // Earlier hard coded value was 1024, So the value should not be less than that value
            extraMaxBuffer = 1024;
        } else {
            extraMaxBuffer = configuredExtraMaxBuffer;
        }
    }



====================ctx:=======================
