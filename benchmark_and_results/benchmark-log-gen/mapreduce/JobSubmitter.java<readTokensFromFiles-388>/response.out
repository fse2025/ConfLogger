```java
String binaryTokenFilename =
conf.get(MRJobConfig.MAPREDUCE_JOB_CREDENTIALS_BINARY);
if (binaryTokenFilename != null) {
    // ConfLogger Inserted Start
    logger.info("MAPREDUCE_JOB_CREDENTIALS_BINARY is set to " + binaryTokenFilename);
    // ConfLogger Inserted End
    Credentials binary = Credentials.readTokenStorageFile(
        FileSystem.getLocal(conf).makeQualified(
            new Path(binaryTokenFilename)),
        conf);
    credentials.addAll(binary);
} else {
    // ConfLogger Inserted Start
    logger.warn("MAPREDUCE_JOB_CREDENTIALS_BINARY is not set.");
    // ConfLogger Inserted End
}

// add secret keys coming from a json file
String tokensFileName = conf.get("mapreduce.job.credentials.json");
if(tokensFileName != null) {
    // ConfLogger Commented: Not Informative
    // LOG.info("loading user's secret keys from " + tokensFileName);
    // ConfLogger Inserted Start
    logger.info("mapreduce.job.credentials.json is set to " + tokensFileName);
    // ConfLogger Inserted End
    String localFileName = new Path(tokensFileName).toUri().getPath();

    try {
        // read JSON
        Map<String, String> nm = JsonSerialization.mapReader().readValue(
            new File(localFileName));

        for(Map.Entry<String, String> ent: nm.entrySet()) {
            credentials.addSecretKey(new Text(ent.getKey()), ent.getValue()
            .getBytes(Charsets.UTF_8));
        }
    } catch (JsonMappingException | JsonParseException e) {
        // ConfLogger Skipped
        LOG.warn("couldn't parse Token Cache JSON file with user secret keys");
    }
} else {
    // ConfLogger Inserted Start
    logger.warn("mapreduce.job.credentials.json is not set.");
    // ConfLogger Inserted End
}
```