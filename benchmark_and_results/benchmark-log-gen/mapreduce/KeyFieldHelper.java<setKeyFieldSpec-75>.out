====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	KeyFieldHelper.java	methodSinagture:	org.apache.hadoop.mapreduce.lib.partition.KeyFieldHelper.setKeyFieldSpec(II)V	methodLines:	75:83
blockLines:	76:-1
paras:	null
TaintedStat:	NORMAL setKeyFieldSpec:conditional branch(lt, to iindex=21) 3,2 Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldHelper, setKeyFieldSpec(II)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[19]14 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;)Ljava/lang/String; > 2,12 @36 exception:13
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[19]14 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;)Ljava/lang/String; > 2,12 @36 exception:13
NORMAL setConf:conditional branch(eq, to iindex=38) 14,15 Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere
NORMAL setConf:29 = getfield < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, numOfPartitionFields, <Primordial,I> > 1 Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[36]invokevirtual < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldHelper, setKeyFieldSpec(II)V > 27,28,29 @72 exception:30 v29
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldHelper, setKeyFieldSpec(II)V > Context: Everywhere v3
NORMAL setKeyFieldSpec:conditional branch(lt, to iindex=21) 3,2 Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldHelper, setKeyFieldSpec(II)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
  public void setKeyFieldSpec(int start, int end) {
    if (end >= start) {
      KeyDescription k = new KeyDescription();
      k.beginFieldIdx = start;
      k.endFieldIdx = end;
      keySpecSeen = true;
      allKeySpecs.add(k);
    }
  }
  


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere, blocks=[BB[SSA:36..36]15 - org.apache.hadoop.mapreduce.lib.partition.KeyFieldBasedPartitioner.setConf(Lorg/apache/hadoop/conf/Configuration;)V, BB[SSA:33..35]14 - org.apache.hadoop.mapreduce.lib.partition.KeyFieldBasedPartitioner.setConf(Lorg/apache/hadoop/conf/Configuration;)V, BB[SSA:37..37]16 - org.apache.hadoop.mapreduce.lib.partition.KeyFieldBasedPartitioner.setConf(Lorg/apache/hadoop/conf/Configuration;)V, BB[SSA:-1..-2]21 - org.apache.hadoop.mapreduce.lib.partition.KeyFieldBasedPartitioner.setConf(Lorg/apache/hadoop/conf/Configuration;)V], numberOfBasicBlocks=4, firstLineNumber=74, lastLineNumber=74, firstMethodNumber=64, lastMethodNumber=79, isFirstLineValid=true, methodSrcCode=
  public void setConf(Configuration conf) {
    this.conf = conf;
    keyFieldHelper = new KeyFieldHelper();
    String keyFieldSeparator = 
      conf.get(MRJobConfig.MAP_OUTPUT_KEY_FIELD_SEPARATOR, "\t");
    keyFieldHelper.setKeyFieldSeparator(keyFieldSeparator);
    if (conf.get("num.key.fields.for.partition") != null) {
      LOG.warn("Using deprecated num.key.fields.for.partition. " +
      		"Use mapreduce.partition.keypartitioner.options instead");
      this.numOfPartitionFields = conf.getInt("num.key.fields.for.partition",0);
      keyFieldHelper.setKeyFieldSpec(1,numOfPartitionFields);
    } else {
      String option = conf.get(PARTITIONER_OPTIONS);
      keyFieldHelper.parseOption(option);
    }
  }

}
