```java
throws IOException {

    final float bufferPercent =
    conf.getFloat(JobContext.REDUCE_MARKRESET_BUFFER_PERCENT, 0f);

    if (bufferPercent > 1.0 || bufferPercent < 0.0) {
        // ConfLogger Inserted Start
        logger.error("Invalid bufferPercent configuration: " + JobContext.REDUCE_MARKRESET_BUFFER_PERCENT + " = " + bufferPercent + ". It should be between 0.0 and 1.0.");
        // ConfLogger Inserted End
        throw new IOException(JobContext.REDUCE_MARKRESET_BUFFER_PERCENT + bufferPercent);
    }

    int maxSize = (int)Math.min(
    Runtime.getRuntime().maxMemory() * bufferPercent, Integer.MAX_VALUE);

    // Support an absolute size also.
    int tmp = conf.getInt(JobContext.REDUCE_MARKRESET_BUFFER_SIZE, 0);
    if (tmp >  0) {
        // ConfLogger Inserted Start
        logger.info("Using absolute buffer size configuration: " + JobContext.REDUCE_MARKRESET_BUFFER_SIZE + " = " + tmp);
        // ConfLogger Inserted End
        maxSize = tmp;
    }

    memCache = new MemoryCache(maxSize);
    fileCache = new FileCache(conf);
    tid = taskid;

    this.conf = conf;

    LOG.info("Created a new BackupStore with a memory of " + maxSize);

}
```