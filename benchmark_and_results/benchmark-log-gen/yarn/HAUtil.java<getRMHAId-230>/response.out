```java
int found = 0;
String currentRMId = conf.getTrimmed(YarnConfiguration.RM_HA_ID);
if(currentRMId == null) {
    for(String rmId : getRMHAIds(conf)) {
        String key = addSuffix(YarnConfiguration.RM_ADDRESS, rmId);
        String addr = conf.get(key);
        if (addr == null) {
            continue;
        }
        InetSocketAddress s;
        try {
            s = NetUtils.createSocketAddr(addr);
        } catch (Exception e) {
            // ConfLogger Commented: Not Informative
            // LOG.warn("Exception in creating socket address " + addr, e);
            // ConfLogger Inserted Start
            logger.warn("Exception in creating socket address for key: " + key + ", address: " + addr, e);
            // ConfLogger Inserted End
            continue;
        }
        if (!s.isUnresolved() && NetUtils.isLocalAddress(s.getAddress())) {
            currentRMId = rmId.trim();
            found++;
        }
    }
}
if (found > 1) { // Only one address must match the local address
    String msg = "The HA Configuration has multiple addresses that match "
    + "local node's address.";
    // ConfLogger Inserted Start
    logger.error("The HA Configuration has multiple addresses that match local node's address. Found addresses: " + found);
    // ConfLogger Inserted End
    throw new HadoopIllegalArgumentException(msg);
}
// ConfLogger Inserted Start
logger.info("Returning currentRMId: " + currentRMId + " based on configuration.");
// ConfLogger Inserted End
return currentRMId;
```