```java
if (conf.get(PropertyKey.SECURITY_AUTHENTICATION_TYPE) == AuthType.NOSASL) {
    // ConfLogger Inserted Start
    logger.info("Authentication type is set to NOSASL. No authentication will be performed. PropertyKey: {}, Value: {}", PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL);
    // ConfLogger Inserted End
    return null;
}
if (StringUtils.isEmpty(authorization)) {
    // ConfLogger Skipped
    LOG.error("The authorization header content is null or empty");
    throw new S3Exception("The authorization header that you provided is not valid.",
            S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);
}

// Parse the authorization header defined at
// https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html
// All other authorization types are deprecated or EOL (as of writing)
// Example Header value (spaces turned to line breaks):
// AWS4-HMAC-SHA256
// Credential=AKIAIOSFODNN7EXAMPLE/20130524/us-east-1/s3/aws4_request,
// SignedHeaders=host;range;x-amz-date,
// Signature=fe5f80f77d5fa3beca038a248ff027d0445342fe2855ddc963176630326f1024

// We only care about the credential key, so split the header by " " and then take everything
// after the "=" and before the first "/"
String[] fields = authorization.split(" ");
if (fields.length < 2) {
    // ConfLogger Commented: Not Informative
    // LOG.error("The authorization header {} content is invalid: not contain the credential key", authorization);
    // ConfLogger Inserted Start
    logger.error("The authorization header content is invalid: does not contain the credential key. Authorization: {}", authorization);
    // ConfLogger Inserted End
    throw new S3Exception("The authorization header that you provided is not valid.",
            S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);
}
String credentials = fields[1];
String[] creds = credentials.split("=");
// only support version 4 signature
if (creds.length < 2 || !StringUtils.equals("Credential", creds[0])
        || !creds[1].contains("/")) {
    // ConfLogger Commented: Not Informative
    // LOG.error("The authorization header {} content is invalid: only version 4 signature is supported", authorization);
    // ConfLogger Inserted Start
    logger.error("The authorization header content is invalid: only version 4 signature is supported. Authorization: {}", authorization);
    // ConfLogger Inserted End
    throw new S3Exception("The authorization header that you provided is not valid.",
            S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);
}

final String user = creds[1].substring(0, creds[1].indexOf("/")).trim();
if (user.isEmpty()) {
    // ConfLogger Commented: Not Informative
    // LOG.error("The authorization header {} content is invalid: empty user", authorization);
    // ConfLogger Inserted Start
    logger.error("The authorization header content is invalid: empty user. Authorization: {}", authorization);
    // ConfLogger Inserted End
    throw new S3Exception("The authorization header that you provided is not valid.",
            S3ErrorCode.AUTHORIZATION_HEADER_MALFORMED);
}

return user;
}
```