<code-whole>
public CachedGroupMapping(GroupMappingService service, long groupMappingCacheTimeoutMs) {
mService = service;
mCacheEnabled = groupMappingCacheTimeoutMs > 0;
if (mCacheEnabled) {
mCache = CacheBuilder.newBuilder()
// the maximum number of entries the cache may contain.
.maximumSize(MAXSIZE)
// active entries are eligible for automatic refresh once the specified time duration has
// elapsed after the entry was last modified.
.refreshAfterWrite(groupMappingCacheTimeoutMs, TimeUnit.MILLISECONDS)
// each entry should be automatically removed from the cache once the specified time
// duration has elapsed after the entry was last modified.
.expireAfterWrite(10 * groupMappingCacheTimeoutMs, TimeUnit.MILLISECONDS)
.build(new GroupMappingCacheLoader());
}
}
</code-whole>

<code-specified>
if (mCacheEnabled) {
mCache = CacheBuilder.newBuilder()
// the maximum number of entries the cache may contain.
.maximumSize(MAXSIZE)
// active entries are eligible for automatic refresh once the specified time duration has
// elapsed after the entry was last modified.
.refreshAfterWrite(groupMappingCacheTimeoutMs, TimeUnit.MILLISECONDS)
// each entry should be automatically removed from the cache once the specified time
// duration has elapsed after the entry was last modified.
.expireAfterWrite(10 * groupMappingCacheTimeoutMs, TimeUnit.MILLISECONDS)
.build(new GroupMappingCacheLoader());
}
</code-specified>