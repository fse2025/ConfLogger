```java
List<WorkerInfo> workerInfos = new ArrayList<>();
File file = new File(configFile);
if (!file.exists()) {
    throw new NotFoundRuntimeException("Not found for static worker config file:" + configFile);
}
Set<String> workerHostnames = CommandUtils.readNodeList("", configFile);
for (String workerHostname : workerHostnames) {
    WorkerNetAddress workerNetAddress = new WorkerNetAddress()
        .setHost(workerHostname)
        .setContainerHost(Configuration.global()
            .getOrDefault(PropertyKey.WORKER_CONTAINER_HOSTNAME, ""))
        .setRpcPort(conf.getInt(PropertyKey.WORKER_RPC_PORT))
        .setWebPort(conf.getInt(PropertyKey.WORKER_WEB_PORT))
        .setHttpServerPort(conf.getInt(PropertyKey.WORKER_HTTP_SERVER_PORT));
    //data port, these are initialized from configuration for client to deduce the
    //workeraddr related info, on worker side, it will be corrected by join().
    InetSocketAddress inetAddr;
    if (Configuration.global().getBoolean(PropertyKey.USER_NETTY_DATA_TRANSMISSION_ENABLED))  {
        inetAddr = NetworkAddressUtils.getBindAddress(
            NetworkAddressUtils.ServiceType.WORKER_DATA,
            Configuration.global());
        workerNetAddress.setNettyDataPort(inetAddr.getPort());
        // ConfLogger Inserted Start
        logger.info("USER_NETTY_DATA_TRANSMISSION_ENABLED is true. Netty data port set to: " + inetAddr.getPort() + ". Configuration parameter: " + PropertyKey.USER_NETTY_DATA_TRANSMISSION_ENABLED);
        // ConfLogger Inserted End
    } else {
        inetAddr = NetworkAddressUtils.getConnectAddress(
            NetworkAddressUtils.ServiceType.WORKER_RPC,
            Configuration.global());
        // ConfLogger Inserted Start
        logger.info("USER_NETTY_DATA_TRANSMISSION_ENABLED is false. RPC port set to: " + inetAddr.getPort() + ". Configuration parameter: " + PropertyKey.USER_NETTY_DATA_TRANSMISSION_ENABLED);
        // ConfLogger Inserted End
    }
    workerNetAddress.setDataPort(inetAddr.getPort());
    // generate identities from hostnames
    // todo(bowen): consider change the configuration file to allow specify both the
    //  identity and the net address
    WorkerIdentity identity = WorkerIdentity.ParserV1.INSTANCE.fromUUID(
        UUID.nameUUIDFromBytes(workerHostname.getBytes(StandardCharsets.UTF_8)));
    WorkerInfo workerInfo = new WorkerInfo()
        .setIdentity(identity)
        .setAddress(workerNetAddress);
    workerInfos.add(workerInfo);
}
return workerInfos;
}
```