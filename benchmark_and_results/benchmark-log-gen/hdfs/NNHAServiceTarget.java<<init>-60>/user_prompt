<code-whole>
String nsId, String nnId) {
Preconditions.checkNotNull(nnId);

if (nsId == null) {
nsId = DFSUtil.getOnlyNameServiceIdOrNull(conf);
if (nsId == null) {
String errorString = "Unable to determine the name service ID.";
String[] dfsNames = conf.getStrings(DFS_NAMESERVICES);
if ((dfsNames != null) && (dfsNames.length > 1)) {
errorString = "Unable to determine the name service ID. " +
"This is an HA configuration with multiple name services " +
"configured. " + DFS_NAMESERVICES + " is set to " +
Arrays.toString(dfsNames) + ". Please re-run with the -ns option.";
}
throw new IllegalArgumentException(errorString);
}
}
assert nsId != null;

// Make a copy of the conf, and override configs based on the
// target node -- not the node we happen to be running on.
HdfsConfiguration targetConf = new HdfsConfiguration(conf);
NameNode.initializeGenericKeys(targetConf, nsId, nnId);

String serviceAddr =
DFSUtil.getNamenodeServiceAddr(targetConf, nsId, nnId);
if (serviceAddr == null) {
throw new IllegalArgumentException(
"Unable to determine service address for namenode '" + nnId + "'");
}
this.addr = NetUtils.createSocketAddr(serviceAddr,
HdfsClientConfigKeys.DFS_NAMENODE_RPC_PORT_DEFAULT);

String lifelineAddrStr =
DFSUtil.getNamenodeLifelineAddr(targetConf, nsId, nnId);
this.lifelineAddr = (lifelineAddrStr != null) ?
NetUtils.createSocketAddr(lifelineAddrStr) : null;

this.autoFailoverEnabled = targetConf.getBoolean(
DFSConfigKeys.DFS_HA_AUTO_FAILOVER_ENABLED_KEY,
DFSConfigKeys.DFS_HA_AUTO_FAILOVER_ENABLED_DEFAULT);
if (autoFailoverEnabled) {
int port = DFSZKFailoverController.getZkfcPort(targetConf);
if (port != 0) {
setZkfcPort(port);
}
}

try {
this.fencer = NodeFencer.create(targetConf,
DFSConfigKeys.DFS_HA_FENCE_METHODS_KEY);
} catch (BadFencingConfigurationException e) {
this.fenceConfigError = e;
}

this.nnId = nnId;
this.nsId = nsId;
}
</code-whole>

<code-specified>
if ((dfsNames != null) && (dfsNames.length > 1)) {
errorString = "Unable to determine the name service ID. " +
"This is an HA configuration with multiple name services " +
"configured. " + DFS_NAMESERVICES + " is set to " +
Arrays.toString(dfsNames) + ". Please re-run with the -ns option.";
}
</code-specified>