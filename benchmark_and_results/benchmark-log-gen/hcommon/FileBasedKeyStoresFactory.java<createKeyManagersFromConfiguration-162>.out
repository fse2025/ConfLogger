====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	FileBasedKeyStoresFactory.java	methodSinagture:	org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V	methodLines:	162:205
blockLines:	194:-1
paras:	null
TaintedStat:	NORMAL createKeyManagersFromConfiguration:conditional branch(le, to iindex=113) 51,15 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere]
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere][12]15 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getLong(Ljava/lang/String;J)J > 9,12,13 @24 exception:14
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere][12]15 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getLong(Ljava/lang/String;J)J > 9,12,13 @24 exception:14
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere][39]invokespecial < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > 1,2,26,15 @75 exception:38 v15
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere] v4
NORMAL createKeyManagersFromConfiguration:51 = compare 4,50 opcode=cmp Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere]
NORMAL createKeyManagersFromConfiguration:conditional branch(le, to iindex=113) 51,15 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere]

-------------TaintedSinkInfo----------
fileName:	FileBasedKeyStoresFactory.java	methodSinagture:	org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V	methodLines:	162:205
blockLines:	166:-1
paras:	null
TaintedStat:	NORMAL createKeyManagersFromConfiguration:conditional branch(eq, to iindex=28) 14,15 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere]
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: Everywhere[8]12 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 9,8,10 @16 exception:11
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: Everywhere[8]12 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 9,8,10 @16 exception:11
NORMAL createKeyManagersFromConfiguration:44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 42,12 @182 exception:43 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > Context: Everywhere
NORMAL append:return 1 Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > Context: Everywhere
NORMAL_RET_CALLER:Node: < Primordial, Ljava/lang/ThreadGroup, uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V > Context: Everywhere[34]23 = invokevirtual < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 20,21 @69 exception:22
NORMAL uncaughtException:25 = invokevirtual < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 23 @72 exception:24 Node: < Primordial, Ljava/lang/ThreadGroup, uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > Context: Everywhere
NORMAL toString:return 14 Node: < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > Context: Everywhere
NORMAL_RET_CALLER:Node: < Primordial, Ljava/lang/StackTraceElement, toString()Ljava/lang/String; > Context: Everywhere[44]37 = invokevirtual < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 35 @89 exception:36
PHI Node: < Primordial, Ljava/lang/StackTraceElement, toString()Ljava/lang/String; > Context: Everywhere:56 = phi  24,24,37,37,37,55
NORMAL toString:58 = invokevirtual < Primordial, Ljava/lang/String, isEmpty()Z > 56 @145 exception:57 Node: < Primordial, Ljava/lang/StackTraceElement, toString()Ljava/lang/String; > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/String, isEmpty()Z > Context: Everywhere
NORMAL isEmpty:return 7 Node: < Primordial, Ljava/lang/String, isEmpty()Z > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/String, isEmpty()Z > Context: Everywhere
NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere][11]14 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 12 @23 exception:13
NORMAL createKeyManagersFromConfiguration:conditional branch(eq, to iindex=28) 14,15 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere]

-------------TaintedSinkInfo----------
fileName:	FileBasedKeyStoresFactory.java	methodSinagture:	org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V	methodLines:	162:205
blockLines:	173:-1
paras:	null
TaintedStat:	NORMAL createKeyManagersFromConfiguration:conditional branch(eq, to iindex=57) 23,15 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere][8]12 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 9,8,10 @16 exception:11
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere][8]12 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 9,8,10 @16 exception:11
NORMAL createKeyManagersFromConfiguration:14 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 12 @23 exception:13 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere]
METHOD_ENTRY:Node: < Primordial, Ljava/lang/String, isEmpty()Z > Context: Everywhere
NORMAL isEmpty:return 7 Node: < Primordial, Ljava/lang/String, isEmpty()Z > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/String, isEmpty()Z > Context: Everywhere
NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: Everywhere[40]23 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 21 @86 exception:22
NORMAL createKeyManagersFromConfiguration:conditional branch(eq, to iindex=57) 23,15 Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, createKeyManagersFromConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Ljava/lang/String;J)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      throws GeneralSecurityException, IOException {
    String locationProperty =
        resolvePropertyName(mode, SSL_KEYSTORE_LOCATION_TPL_KEY);
    String keystoreLocation = conf.get(locationProperty, "");
    if (keystoreLocation.isEmpty()) {
      throw new GeneralSecurityException("The property '" + locationProperty +
          "' has not been set in the ssl configuration file.");
    }
    String passwordProperty =
        resolvePropertyName(mode, SSL_KEYSTORE_PASSWORD_TPL_KEY);
    String keystorePassword = getPassword(conf, passwordProperty, "");
    if (keystorePassword.isEmpty()) {
      throw new GeneralSecurityException("The property '" + passwordProperty +
          "' has not been set in the ssl configuration file.");
    }
    String keyPasswordProperty =
        resolvePropertyName(mode, SSL_KEYSTORE_KEYPASSWORD_TPL_KEY);
    // Key password defaults to the same value as store password for
    // compatibility with legacy configurations that did not use a separate
    // configuration property for key password.
    String keystoreKeyPassword = getPassword(
        conf, keyPasswordProperty, keystorePassword);
    if (LOG.isDebugEnabled()) {
      LOG.debug(mode.toString() + " KeyStore: " + keystoreLocation);
    }

    ReloadingX509KeystoreManager keystoreManager =  new ReloadingX509KeystoreManager(
        keystoreType,
        keystoreLocation,
        keystorePassword,
        keystoreKeyPassword);

    if (storesReloadInterval > 0) {
      fileMonitoringTimer.schedule(
          new FileMonitoringTimerTask(
              Paths.get(keystoreLocation),
              path -> keystoreManager.loadFrom(path),
              exception -> LOG.error(ReloadingX509KeystoreManager.RELOAD_ERROR_MESSAGE, exception)),
          storesReloadInterval,
          storesReloadInterval);
    }

    keyManagers = new KeyManager[] { keystoreManager };
  }



====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V > Context: DelegatingContext [A=ReceiverInstanceContext<SITE_IN_NODE{synthetic  factory < Primordial, Ljava/lang/reflect/Constructor, newInstance([Ljava/lang/Object;)Ljava/lang/Object; >:Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory in DelegatingContext [A=DelegatingContext [A=ReceiverInstanceContext<[ConstantKey:< Application, Lorg/apache/hadoop/security/ssl/FileBasedKeyStoresFactory, <init>()V >:<Primordial,Ljava/lang/reflect/Constructor>]>, B=CallStringContext: [ org.apache.hadoop.util.ReflectionUtils.newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;@46 ]], B=Everywhere]}>, B=Everywhere], blocks=[BB[SSA:35..39]14 - org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V, BB[SSA:28..31]12 - org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V, BB[SSA:32..34]13 - org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V, BB[SSA:40..40]15 - org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V, BB[SSA:-1..-2]43 - org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory.init(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)V], numberOfBasicBlocks=5, firstLineNumber=268, lastLineNumber=272, firstMethodNumber=255, lastMethodNumber=300, isFirstLineValid=true, methodSrcCode=

    boolean requireClientCert =
      conf.getBoolean(SSLFactory.SSL_REQUIRE_CLIENT_CERT_KEY,
          SSLFactory.SSL_REQUIRE_CLIENT_CERT_DEFAULT);

    long storesReloadInterval = conf.getLong(
        resolvePropertyName(mode, SSL_STORES_RELOAD_INTERVAL_TPL_KEY),
        DEFAULT_SSL_STORES_RELOAD_INTERVAL);

    fileMonitoringTimer = new Timer(SSL_MONITORING_THREAD_NAME, true);

    // certificate store
    String keystoreType =
        conf.get(resolvePropertyName(mode, SSL_KEYSTORE_TYPE_TPL_KEY),
                 DEFAULT_KEYSTORE_TYPE);

    if (requireClientCert || mode == SSLFactory.Mode.SERVER) {
      createKeyManagersFromConfiguration(mode, keystoreType, storesReloadInterval);
    } else {
      KeyStore keystore = KeyStore.getInstance(keystoreType);
      keystore.load(null, null);
      KeyManagerFactory keyMgrFactory = KeyManagerFactory
              .getInstance(SSLFactory.SSLCERTIFICATE);

      keyMgrFactory.init(keystore, null);
      keyManagers = keyMgrFactory.getKeyManagers();
    }

    //trust store
    String truststoreType =
      conf.get(resolvePropertyName(mode, SSL_TRUSTSTORE_TYPE_TPL_KEY),
               DEFAULT_KEYSTORE_TYPE);

    String locationProperty =
      resolvePropertyName(mode, SSL_TRUSTSTORE_LOCATION_TPL_KEY);
    String truststoreLocation = conf.get(locationProperty, "");
    if (!truststoreLocation.isEmpty()) {
      createTrustManagersFromConfiguration(mode, truststoreType, truststoreLocation, storesReloadInterval);
    } else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("The property '" + locationProperty + "' has not been set, " +
            "no TrustStore will be loaded");
      }
      trustManagers = null;
    }
  }

}
