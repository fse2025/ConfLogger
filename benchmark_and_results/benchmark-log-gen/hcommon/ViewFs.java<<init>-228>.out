====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	ViewFs.java	methodSinagture:	org.apache.hadoop.fs.viewfs.ViewFs.<init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V	methodLines:	228:290
blockLines:	239:-1
paras:	fs.viewfs.rename.strategy
TaintedStat:	NORMAL <init>:conditional branch(ne, to iindex=38) 25,6 Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[55]34 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 3,29,32 @104 exception:33
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[55]34 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 3,29,32 @104 exception:33
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[56]36 = invokestatic < Application, Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy, valueOf(Ljava/lang/String;)Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy; > 34 @107 exception:35 v34
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy, valueOf(Ljava/lang/String;)Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy; > Context: Everywhere v1
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy, valueOf(Ljava/lang/String;)Lorg/apache/hadoop/fs/viewfs/ViewFileSystem$RenameStrategy; > Context: Everywhere[2]5 = invokestatic < Application, Ljava/lang/Enum, valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; > 3,1 @3 exception:4 v1
PARAM_CALLEE:Node: < Primordial, Ljava/lang/Enum, valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; > Context: Everywhere v2
PARAM_CALLER:Node: < Primordial, Ljava/lang/Enum, valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; > Context: Everywhere[32]24 = invokevirtual < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 22,2 @63 exception:23 v2
PARAM_CALLEE:Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > Context: Everywhere v2
PARAM_CALLER:Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > Context: Everywhere[2]5 = invokespecial < Primordial, Ljava/lang/AbstractStringBuilder, append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; > 1,2 @2 exception:4 v2
PARAM_CALLEE:Node: < Primordial, Ljava/lang/AbstractStringBuilder, append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; > Context: Everywhere v2
NORMAL append:6 = invokevirtual < Primordial, Ljava/lang/String, length()I > 2 @10 exception:5 Node: < Primordial, Ljava/lang/AbstractStringBuilder, append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/String, length()I > Context: Everywhere
NORMAL length:6 = invokevirtual < Primordial, Ljava/lang/String, coder()B > 1 @6 exception:5 Node: < Primordial, Ljava/lang/String, length()I > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/String, coder()B > Context: Everywhere
NORMAL coder:return 7 Node: < Primordial, Ljava/lang/String, coder()B > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/String, coder()B > Context: Everywhere
NORMAL_RET_CALLER:Node: < Primordial, Ljava/lang/String, equals(Ljava/lang/Object;)Z > Context: Everywhere[13]8 = invokevirtual < Primordial, Ljava/lang/String, coder()B > 1 @20 exception:7
NORMAL equals:conditional branch(ne, to iindex=33) 8,10 Node: < Primordial, Ljava/lang/String, equals(Ljava/lang/Object;)Z > Context: Everywhere
NORMAL equals:return 21 Node: < Primordial, Ljava/lang/String, equals(Ljava/lang/Object;)Z > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/String, equals(Ljava/lang/Object;)Z > Context: Everywhere
NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[33]25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,23 @64 exception:24
NORMAL <init>:conditional branch(ne, to iindex=38) 25,6 Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      URISyntaxException {
    super(theUri, FsConstants.VIEWFS_SCHEME, false, -1);
    creationTime = Time.now();
    ugi = UserGroupInformation.getCurrentUser();
    config = conf;
    showMountLinksAsSymlinks = config
        .getBoolean(CONFIG_VIEWFS_MOUNT_LINKS_AS_SYMLINKS,
            CONFIG_VIEWFS_MOUNT_LINKS_AS_SYMLINKS_DEFAULT);
    // Now build  client side view (i.e. client side mount table) from config.
    String authority = theUri.getAuthority();
    boolean initingUriAsFallbackOnNoMounts =
        !FsConstants.VIEWFS_TYPE.equals(getType());
    fsState = new InodeTree<AbstractFileSystem>(conf, authority, theUri,
        initingUriAsFallbackOnNoMounts) {

      @Override
      protected Function<URI, AbstractFileSystem> initAndGetTargetFs() {
        return new Function<URI, AbstractFileSystem>() {
          @Override
          public AbstractFileSystem apply(final URI uri) {
            AbstractFileSystem fs;
            try {
              fs = ugi.doAs(
                  new PrivilegedExceptionAction<AbstractFileSystem>() {
                    @Override
                    public AbstractFileSystem run() throws IOException {
                      return AbstractFileSystem.createFileSystem(uri, config);
                    }
                  });
              String pathString = uri.getPath();
              if (pathString.isEmpty()) {
                pathString = "/";
              }
              return new ChRootedFs(fs, new Path(pathString));
            } catch (IOException | URISyntaxException |
                InterruptedException ex) {
              LOG.error("Could not initialize underlying FileSystem object"
                  +" for uri " + uri + "with exception: " + ex.toString());
            }
            return null;
          }
        };
      }

      @Override
      protected AbstractFileSystem getTargetFileSystem(
          final INodeDir<AbstractFileSystem> dir) throws URISyntaxException {
        return new InternalDirOfViewFs(dir, creationTime, ugi, getUri(), this,
            config);
      }

      @Override
      protected AbstractFileSystem getTargetFileSystem(final String settings,
          final URI[] mergeFsURIList)
          throws URISyntaxException, UnsupportedFileSystemException {
        throw new UnsupportedFileSystemException("mergefs not implemented yet");
        // return MergeFs.createMergeFs(mergeFsURIList, config);
      }
    };
    renameStrategy = ViewFileSystem.RenameStrategy.valueOf(
        conf.get(Constants.CONFIG_VIEWFS_RENAME_STRATEGY,
            ViewFileSystem.RenameStrategy.SAME_MOUNTPOINT.toString()));
  }



====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/fs/viewfs/ViewFs, <init>(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere, blocks=[BB[SSA:0..3]1 - org.apache.hadoop.fs.viewfs.ViewFs.<init>(Lorg/apache/hadoop/conf/Configuration;)V, BB[SSA:-1..-2]0 - org.apache.hadoop.fs.viewfs.ViewFs.<init>(Lorg/apache/hadoop/conf/Configuration;)V, BB[SSA:4..4]2 - org.apache.hadoop.fs.viewfs.ViewFs.<init>(Lorg/apache/hadoop/conf/Configuration;)V, BB[SSA:-1..-2]3 - org.apache.hadoop.fs.viewfs.ViewFs.<init>(Lorg/apache/hadoop/conf/Configuration;)V], numberOfBasicBlocks=4, firstLineNumber=214, lastLineNumber=216, firstMethodNumber=214, lastMethodNumber=216, isFirstLineValid=false, methodSrcCode=
      URISyntaxException {
    this(FsConstants.VIEWFS_URI, conf);
  }
  
}
