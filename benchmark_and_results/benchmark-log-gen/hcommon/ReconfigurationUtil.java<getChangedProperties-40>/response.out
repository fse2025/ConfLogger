```java
Map<String, PropertyChange> changes = new HashMap<String, PropertyChange>();

// iterate over old configuration
for (Map.Entry<String, String> oldEntry: oldConf) {
    String prop = oldEntry.getKey();
    String oldVal = oldEntry.getValue();
    String newVal = newConf.getRaw(prop);

    if (newVal == null || !newVal.equals(oldVal)) {
        // ConfLogger Inserted Start
        logger.info("Configuration change detected for property: " + prop + ". Old value: " + oldVal + ", New value: " + newVal);
        // ConfLogger Inserted End
        changes.put(prop, new PropertyChange(prop, newVal, oldVal));
    }
}

// now iterate over new configuration
// (to look for properties not present in old conf)
for (Map.Entry<String, String> newEntry: newConf) {
    String prop = newEntry.getKey();
    String newVal = newEntry.getValue();
    if (oldConf.get(prop) == null) {
        // ConfLogger Inserted Start
        logger.info("New property detected in configuration: " + prop + ". Value: " + newVal);
        // ConfLogger Inserted End
        changes.put(prop, new PropertyChange(prop, newVal, null));
    }
}

return changes.values();
```