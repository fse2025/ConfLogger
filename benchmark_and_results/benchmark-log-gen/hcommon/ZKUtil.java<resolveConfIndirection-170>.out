====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	ZKUtil.java	methodSinagture:	org.apache.hadoop.util.ZKUtil.resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String;	methodLines:	170:176
blockLines:	171:-1
paras:	hadoop.zk.acl
TaintedStat:	NORMAL resolveConfIndirection:conditional branch(ne, to iindex=5) 1,3 Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/util/curator/ZKCuratorManager, getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[3]6 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 1,3,4 @5 exception:5
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/util/curator/ZKCuratorManager, getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[3]6 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 1,3,4 @5 exception:5
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/util/curator/ZKCuratorManager, getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[6]8 = invokestatic < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > 6 @10 exception:7 v6
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere v1
NORMAL resolveConfIndirection:conditional branch(ne, to iindex=5) 1,3 Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere

-------------TaintedSinkInfo----------
fileName:	ZKUtil.java	methodSinagture:	org.apache.hadoop.util.ZKUtil.resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String;	methodLines:	170:176
blockLines:	172:-1
paras:	null
TaintedStat:	NORMAL resolveConfIndirection:conditional branch(ne, to iindex=12) 6,7 Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/SecurityUtil, getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List; > Context: Everywhere[2]5 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getPassword(Ljava/lang/String;)[C > 1,2 @2 exception:4
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/security/SecurityUtil, getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List; > Context: Everywhere[2]5 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getPassword(Ljava/lang/String;)[C > 1,2 @2 exception:4
NORMAL getZKAuthInfos:conditional branch(eq, to iindex=10) 5,6 Node: < Application, Lorg/apache/hadoop/security/SecurityUtil, getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List; > Context: Everywhere
PHI Node: < Application, Lorg/apache/hadoop/security/SecurityUtil, getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List; > Context: Everywhere:9 = phi  8,6
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/security/SecurityUtil, getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List; > Context: Everywhere[13]11 = invokestatic < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > 9 @20 exception:10 v9
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere v1
NORMAL resolveConfIndirection:conditional branch(ne, to iindex=5) 1,3 Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
NORMAL resolveConfIndirection:conditional branch(ne, to iindex=12) 6,7 Node: < Application, Lorg/apache/hadoop/util/ZKUtil, resolveConfIndirection(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      throws IOException {
    if (valInConf == null) return null;
    if (!valInConf.startsWith("@")) {
      return valInConf;
    }
    String path = valInConf.substring(1).trim();
    return Files.asCharSource(new File(path), Charsets.UTF_8).read().trim();
  }


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/util/curator/ZKCuratorManager, getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere, blocks=[BB[SSA:4..6]2 - org.apache.hadoop.util.curator.ZKCuratorManager.getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:0..3]1 - org.apache.hadoop.util.curator.ZKCuratorManager.getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:7..9]3 - org.apache.hadoop.util.curator.ZKCuratorManager.getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]7 - org.apache.hadoop.util.curator.ZKCuratorManager.getZKAcls(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;], numberOfBasicBlocks=4, firstLineNumber=95, lastLineNumber=99, firstMethodNumber=94, lastMethodNumber=103, isFirstLineValid=true, methodSrcCode=
    // Parse authentication from configuration.
    String zkAclConf = conf.get(CommonConfigurationKeys.ZK_ACL,
        CommonConfigurationKeys.ZK_ACL_DEFAULT);
    try {
      zkAclConf = ZKUtil.resolveConfIndirection(zkAclConf);
      return ZKUtil.parseACLs(zkAclConf);
    } catch (IOException | ZKUtil.BadAclFormatException e) {
      LOG.error("Couldn't read ACLs based on {}",
          CommonConfigurationKeys.ZK_ACL);
      throw e;
    }
}
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/security/SecurityUtil, getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List; > Context: Everywhere, blocks=[BB[SSA:11..13]6 - org.apache.hadoop.security.SecurityUtil.getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;, BB[SSA:9..9]4 - org.apache.hadoop.security.SecurityUtil.getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;, BB[SSA:10..10]5 - org.apache.hadoop.security.SecurityUtil.getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;, BB[SSA:14..17]7 - org.apache.hadoop.security.SecurityUtil.getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;, BB[SSA:-1..-2]14 - org.apache.hadoop.security.SecurityUtil.getZKAuthInfos(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;], numberOfBasicBlocks=5, firstLineNumber=778, lastLineNumber=781, firstMethodNumber=775, lastMethodNumber=788, isFirstLineValid=true, methodSrcCode=
      String configKey) throws IOException {
    char[] zkAuthChars = conf.getPassword(configKey);
    String zkAuthConf =
        zkAuthChars != null ? String.valueOf(zkAuthChars) : null;
    try {
      zkAuthConf = ZKUtil.resolveConfIndirection(zkAuthConf);
      if (zkAuthConf != null) {
        return ZKUtil.parseAuth(zkAuthConf);
      } else {
        return Collections.emptyList();
      }
    } catch (IOException | ZKUtil.BadAuthFormatException e) {
      LOG.error("Couldn't read Auth based on {}", configKey);
      throw e;
    }
}
