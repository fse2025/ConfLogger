====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	NodeFencer.java	methodSinagture:	org.apache.hadoop.ha.NodeFencer.create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer;	methodLines:	83:88
blockLines:	85:-1
paras:	null
TaintedStat:	NORMAL create:conditional branch(ne, to iindex=9) 5,6 Node: < Application, Lorg/apache/hadoop/ha/NodeFencer, create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/ha/NodeFencer, create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer; > Context: Everywhere[2]5 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;)Ljava/lang/String; > 1,2 @2 exception:4
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/ha/NodeFencer, create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer; > Context: Everywhere[2]5 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;)Ljava/lang/String; > 1,2 @2 exception:4
NORMAL create:conditional branch(ne, to iindex=9) 5,6 Node: < Application, Lorg/apache/hadoop/ha/NodeFencer, create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      throws BadFencingConfigurationException {
    String confStr = conf.get(confKey);
    if (confStr == null) {
      return null;
    }
    return new NodeFencer(conf, confStr);
  }


====================ctx:=======================
