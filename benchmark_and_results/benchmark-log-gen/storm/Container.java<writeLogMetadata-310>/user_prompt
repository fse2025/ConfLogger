<code-whole>
type.assertFull();
Map<String, Object> data = new HashMap<>();
data.put(Config.TOPOLOGY_SUBMITTER_USER, user);
data.put("worker-id", workerId);

Set<String> logsGroups = new HashSet<>();
if (topoConf.get(DaemonConfig.LOGS_GROUPS) != null) {
List<String> groups = ObjectReader.getStrings(topoConf.get(DaemonConfig.LOGS_GROUPS));
logsGroups.addAll(groups);
}
if (topoConf.get(Config.TOPOLOGY_GROUPS) != null) {
List<String> topGroups = ObjectReader.getStrings(topoConf.get(Config.TOPOLOGY_GROUPS));
logsGroups.addAll(topGroups);
}
data.put(DaemonConfig.LOGS_GROUPS, logsGroups.toArray());

Set<String> logsUsers = new HashSet<>();
if (topoConf.get(DaemonConfig.LOGS_USERS) != null) {
List<String> logUsers = ObjectReader.getStrings(topoConf.get(DaemonConfig.LOGS_USERS));
logsUsers.addAll(logUsers);
}
if (topoConf.get(Config.TOPOLOGY_USERS) != null) {
List<String> topUsers = ObjectReader.getStrings(topoConf.get(Config.TOPOLOGY_USERS));
logsUsers.addAll(topUsers);
}
data.put(DaemonConfig.LOGS_USERS, logsUsers.toArray());

if (topoConf.get(Config.TOPOLOGY_WORKER_TIMEOUT_SECS) != null) {
int topoTimeout = ObjectReader.getInt(topoConf.get(Config.TOPOLOGY_WORKER_TIMEOUT_SECS));
int defaultWorkerTimeout = ObjectReader.getInt(conf.get(Config.SUPERVISOR_WORKER_TIMEOUT_SECS));
topoTimeout = Math.max(topoTimeout, defaultWorkerTimeout);
data.put(Config.TOPOLOGY_WORKER_TIMEOUT_SECS, topoTimeout);
}

File file = ServerConfigUtils.getLogMetaDataFile(conf, topologyId, port);

Yaml yaml = new Yaml();
try (Writer writer = ops.getWriter(file)) {
yaml.dump(data, writer);
}
}
</code-whole>

<code-specified>
if (topoConf.get(DaemonConfig.LOGS_USERS) != null) {
List<String> logUsers = ObjectReader.getStrings(topoConf.get(DaemonConfig.LOGS_USERS));
logsUsers.addAll(logUsers);
}
</code-specified>