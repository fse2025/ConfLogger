```java
Integer numExecutors = ObjectReader.getInt(conf.get(Config.TOPOLOGY_EVENTLOGGER_EXECUTORS),
ObjectReader.getInt(conf.get(Config.TOPOLOGY_WORKERS)));
if (numExecutors == null || numExecutors == 0) {
    // ConfLogger Inserted Start
    logger.warn("Configuration parameter 'TOPOLOGY_EVENTLOGGER_EXECUTORS' or 'TOPOLOGY_WORKERS' is not set properly. numExecutors is null or 0. Please ensure 'TOPOLOGY_EVENTLOGGER_EXECUTORS' or 'TOPOLOGY_WORKERS' is set to a positive integer.");
    logger.debug("TOPOLOGY_EVENTLOGGER_EXECUTORS: " + conf.get(Config.TOPOLOGY_EVENTLOGGER_EXECUTORS));
    logger.debug("TOPOLOGY_WORKERS: " + conf.get(Config.TOPOLOGY_WORKERS));
    // ConfLogger Inserted End
    return;
}
HashMap<String, Object> componentConf = new HashMap<>();
componentConf.put(Config.TOPOLOGY_TASKS, numExecutors);
componentConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, ObjectReader.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));
Bolt eventLoggerBolt = Thrift.prepareSerializedBoltDetails(
eventLoggerInputs(topology), new EventLoggerBolt(), null, numExecutors, componentConf);

for (Object component : allComponents(topology).values()) {
ComponentCommon common = getComponentCommon(component);
common.put_to_streams(EVENTLOGGER_STREAM_ID, Thrift.outputFields(eventLoggerBoltFields()));
}
topology.put_to_bolts(EVENTLOGGER_COMPONENT_ID, eventLoggerBolt);
}
```