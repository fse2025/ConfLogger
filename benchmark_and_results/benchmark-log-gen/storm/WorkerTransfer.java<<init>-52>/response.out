```java
public WorkerTransfer(WorkerState workerState, Map<String, Object> topologyConf, int maxTaskIdInTopo) {
    this.workerState = workerState;
    this.backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);
    this.drainer = new TransferDrainer();
    this.remoteBackPressureStatus = new AtomicBoolean[maxTaskIdInTopo + 1];
    for (int i = 0; i < remoteBackPressureStatus.length; i++) {
        remoteBackPressureStatus[i] = new AtomicBoolean(false);
    }

    Integer xferQueueSz = ObjectReader.getInt(topologyConf.get(Config.TOPOLOGY_TRANSFER_BUFFER_SIZE));
    Integer xferBatchSz = ObjectReader.getInt(topologyConf.get(Config.TOPOLOGY_TRANSFER_BATCH_SIZE));
    if (xferBatchSz > xferQueueSz / 2) {
        // ConfLogger Inserted Start
        logger.error("Configuration Error: {}:{} must be no more than half of {}:{}", 
                     Config.TOPOLOGY_TRANSFER_BATCH_SIZE, xferBatchSz, 
                     Config.TOPOLOGY_TRANSFER_BUFFER_SIZE, xferQueueSz);
        // ConfLogger Inserted End
        throw new IllegalArgumentException(Config.TOPOLOGY_TRANSFER_BATCH_SIZE + ":" + xferBatchSz + " must be no more than half of "
                + Config.TOPOLOGY_TRANSFER_BUFFER_SIZE + ":" + xferQueueSz);
    }

    this.transferQueue = new JCQueue("worker-transfer-queue", "worker-transfer-queue",
            xferQueueSz, 0, xferBatchSz, backPressureWaitStrategy,
            workerState.getTopologyId(), Constants.SYSTEM_COMPONENT_ID, Collections.singletonList(-1), workerState.getPort(),
            workerState.getMetricRegistry());
}
```